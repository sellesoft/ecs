/*
 *  An instance of a game client owned by the Editor. 
 *  
 *  The idea is that the Editor will be able to create multiple of these
 *  to easily simulate multiple Clients being connected to a Server.
 */

$ require "common"

@lpp.import "editor/Doc.lh"
@lpp.import "game/client/Client.lh"
@lpp.import "graphics/Texture.lh"

namespace gfx
{
struct Vulkan;
struct RenderPass;
}

namespace editor
{

/* ============================================================================
 */
struct ClientInstance : Doc
{
  using S = ClientInstance;

  Client client;

  gfx::Texture client_render;

  b8 init(this ClientInstance& self);
  void deinit();

  void update() override;
  void render(gfx::Vulkan& vk) override;

  void placeUI(ui::UI& ui, const EditorSkinDef& skin) override;

  void notifyAssetChanged(String name, String type);
};

}
