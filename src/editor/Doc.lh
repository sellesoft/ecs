/*
 */
$ require "common"

#include "iro/Common.h"

namespace ui { struct UI; }
namespace gfx 
{ 
struct Vulkan;
struct RenderPass; 
}

struct EditorSkinDef;

namespace editor
{

struct Editor;

/* ============================================================================
 */
struct Doc
{ 
  // A handle to the Editor. This is set by the Editor upon allocation of the 
  // document.
  Editor* editor;

  Doc() {}
  virtual ~Doc() {}

  // Interface called by the Editor to display this document. 

  // Called just after this doc has been allocated.
  virtual void onAllocated() { }

  // Called just before the Editor will deallocate this document.
  virtual void beforeDeallocate() {}

  // Called within a group that will contain this document's contents.
  virtual void placeUI(ui::UI& ui, const EditorSkinDef& skin) { }

  // Not sure where will be called yet.
  virtual void update()  { }

  // Called for when this doc needs to perform some kind of rendering.
  virtual void render(gfx::Vulkan& vk)  { }
};

}
