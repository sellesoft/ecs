/*
 *  Menu bar that appears across the top of the Editor's Window.
 */

$ require "common"

#include "iro/Common.h"
#include "iro/containers/Array.h"
#include "iro/memory/Bump.h"

@lpp.import "event/BroadcastEventBus.lh"
@lpp.import "editor/Editor.events.lh"

namespace ui { struct UI; }
namespace gfx { struct Renderer; }

struct EditorSkinDef;

namespace editor
{

struct Editor;

/* ============================================================================
 */
struct MenuBarTab
{
  String name;

  struct Option
  {
    String name;
    String command;
  };

  Array<Option> options;

  b8 is_open;
};

/* ============================================================================
 */
struct MenuBar
{
  Editor* editor;

  Array<MenuBarTab> tabs;

  mem::LenientBump string_buffer;

  b8 init(Editor* editor, BroadcastEventBus& beb) 
  { 
    this->editor = editor;
    
    if (!tabs.init())
      return false;

    if (!string_buffer.init())
      return false;

    return true; 
  }

  void deinit() 
  {
    string_buffer.deinit();
    tabs.destroy();
  }

  void placeUI(ui::UI& ui, const EditorSkinDef& skin);

  b8 registerTab(String name, Slice<MenuBarTab::Option> options)
  {
    MenuBarTab* tab = tabs.push();
    tab->name = name.allocateCopy(&string_buffer);
    tab->options.init();

    for (MenuBarTab::Option in_opt : options)
    {
      MenuBarTab::Option* opt = tab->options.push();
      opt->name = in_opt.name.allocateCopy(&string_buffer);
      opt->command = in_opt.command.allocateCopy(&string_buffer);
    }

    return true;
  }
};

}
