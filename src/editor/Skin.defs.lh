$ require "common"
$ local metadata = require "reflect.Metadata"

@lpp.import "reflect/CompiledData.lh"
@lpp.import "ui/Skin.defs.lh"
@lpp.import "sdata/SourceDataEditorSkin.defs.lh"

/* ============================================================================
 */
struct EditorMenuBarSkin
{
  Color bg_color;
  f32 height;
  f32 tab_width;
};

/* ============================================================================
 */
struct EditorConsoleTermColors
{
  Color black;
  Color gray;
  Color red;
  Color green;
  Color yellow;
  Color blue;
  Color magenta;
  Color cyan;
  Color white;
};

/* ============================================================================
 */
struct EditorConsoleVerbColors
{
  Color trace;
  Color debug;
  Color info;
  Color notice;
  Color warn;
  Color error;
  Color fatal;
};

/* ============================================================================
 */
struct EditorConsoleSkin
{
  EditorConsoleTermColors term_colors;
  EditorConsoleVerbColors verbosity_colors;
  
  // TODO(sushi) it would be nice if categories could specify their own color.
  Color category_color;

  ui::TextFieldSkin command_field;
  f32 command_field_height;

  ui::ItemSkin history_background;
  ui::TextSkin history_text;
  f32 history_height;
};

/* ============================================================================
 */
struct EditorDocHeader
{
  ui::ItemSkin close_button;
  ui::TextItemSkin text_item;
};

/* ============================================================================
 */
struct EditorDocSkin
{
  EditorDocHeader header;

  f32 divider_size;
};

/* ============================================================================
 */
struct EditorCursor
{
  Rect uv;
  vec2u hot_spot;
};

/* ============================================================================
 */
struct EditorCursors
{
  gfx::TextureLink texture;

  EditorCursor normal;
  EditorCursor resize_h;
  EditorCursor resize_v;
  EditorCursor cross;
  EditorCursor grab;
};

/* ============================================================================
 */
@metadata.def
struct EditorSkinDef
{
  Color bg_color;
  Color tool_panel_bg_color;

  ui::ButtonSkin button;
  ui::DropDownSkin dropdown;
  ui::ButtonSkin dropdown_option;
  ui::ScrollBarSkin scroll_bar;

  ui::TextFieldSkin text_field;

  ui::TextSkin text;

  EditorConsoleSkin console;
  EditorMenuBarSkin menu_bar;
  EditorDocSkin doc;

  SourceDataEditorSkinDef sdata_edit;

  EditorCursors cursor;
};

@metadata.links(skin.data)
struct EditorSkinDefLink : reflect::TypedCompiledDataLink<EditorSkinDef> {};
