$ require "common"

@lpp.import "game/client/GameSim.lh"

@lpp.import "Engine.lh"
@lpp.import "Profiling.lh"

$ do return end

namespace cl
{

/* ----------------------------------------------------------------------------
 */
b8 GameSim::init(InitParams& params)
{
  if (!SharedGameSim::init(params))
    return false;

  GameMgr::InitParams gamemgr_params = 
  {
    .sim = this,
    .vk = params.vk,
    .assetmgr = params.assetmgr,
  };
  if (!gamemgr.init(gamemgr_params))
    return false;

  setViewport(params.viewport);

  return true;
}

/* ----------------------------------------------------------------------------
 */
void GameSim::deinit(gfx::Vulkan& vk)
{
  SharedGameSim::deinit();
  gamemgr.deinit(vk);
}

/* ----------------------------------------------------------------------------
 */
b8 GameSim::update(UpdateParams& params)
{
  if (!SharedGameSim::update(params))
    return false;

  GameMgr::UpdateParams gamemgr_params = 
  {
    .input = params.input,
  };

  return gamemgr.update(gamemgr_params);
}

/* ----------------------------------------------------------------------------
 */
b8 GameSim::render(const RenderParams& params)
{
  GameMgr::RenderParams render_params = 
  {
    .vk = params.vk,
    .target = params.target,
    .view = params.view,
  };

  return gamemgr.render(render_params);
}

}
