$ require "common"

@lpp.import "game/client/graphics/Visualizer.sys.lh"

@log.import

namespace cl
{

/* ----------------------------------------------------------------------------
 */
void VisualizerSys::onAppearanceChange(
    EntComp<Visualizer> ec, 
    AppearanceChange& ev)
{
  if (ev.sprite == nullptr)
    return;

  Visualizer& comp = ec.comp;
  Appearance& appearance = ev.data;
  Sprite* sprite = ev.sprite;

  for (auto& visual : comp.visuals)
  {
    @log.debug(game, "vis ", visual.key, "\n");

    if (StringHash* appearance_val = appearance.data.find(visual.key))
    {
      @log.debug(game, "  found\n");
      if (StringHash* new_state = visual.elem.find(appearance_val->val))
      {
        u64 idx = sprite->states->map.findIndex(new_state->val);
        if (idx != sprite->states->map.len)
        {
            @log.debug(game, "  new state ", idx, "\n");
            sprite->state = idx;
        }
      }
    }
  }
}

}
