/*
 *  Component for entities who's appearance is dynamic. This contains a 
 *  mapping from strings to some state data that is used by systems to 
 *  decide how to 'visualize' an entity.
 */

$ require "common"
$ local m = require "reflect.Metadata"

@[comp] lpp.import "game/shared/component/Component.lh"

@lpp.import "core/StringHash.lh"
@lpp.import "reflect/types/StringMap.lh"

/* ============================================================================
 */
@comp.def(Appearance, 
{

},
{
  b8 is_dirty = false;

  reflect::StringMap<StringHash> data;
})
