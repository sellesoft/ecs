$ require "common"

@lpp.import "game/shared/spawner/Spawner.sys.lh"
@lpp.import "game/shared/spawner/Spawner.comp.lh"

@lpp.import "game/shared/Transform.comp.lh"

@lpp.import "game/client/input/Input.sys.lh"
@lpp.import "game/shared/Eye.sys.lh"

@log.import

/* ----------------------------------------------------------------------------
 */
void SpawnerSys::onInit(EntComp<Spawner> ec, SpawnerInit& init)
{
}

/* ----------------------------------------------------------------------------
 */
void SpawnerSys::onMapLoad(MapPostLoad&)
{
  for (auto& spawner : iterateComp<Spawner>())
  {
    auto* spawner_transform = tryComp<Transform>(spawner.owner);

    EntityId entid = 
      entmgr->spawnEntity(
        spawner.def->kind,
        spawner_transform->pos,
        spawner_transform->placement_layer);

    if (isnil(entid))
    {
      log->error("failed to spawn entity");
      continue;
    }

    log->info(
      "spawned ", entid.value, " (", getEntity(entid)->name, ") at ",
      spawner_transform->pos, ":", spawner_transform->placement_layer);
    
    if (spawner.def->attach)
    {
      log->info("attaching mind and eye to ", entid.value);
      input->attach(entid);
      eye->attach(entid);
    }
  }
}
