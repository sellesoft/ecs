/*
 *  A pointer which internally stores its type. For polymorphic 
 *  data like Components.
 */

$ require "common"

#include "iro/Unicode.h"

@lpp.import "reflect/TypeId.lh"

using namespace iro;

namespace reflect
{

/* ============================================================================
 */
template<typename T>
struct TypedPtr
{
  // Note that the pointer MUST be first for CompiledData atm.
  T* ptr;
  rtr::TypeId type;

  template<typename X>
  X* getAs() 
  {
    return (X*)ptr;
  }

  template<typename X>
  const X* getAs() const
  {
    return (X*)ptr;
  }
};

}
