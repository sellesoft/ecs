/*
 *  Parser for source data.
 */

$ local cmn = require "common"

#include "iro/Common.h"
#include "iro/Unicode.h"
#include "iro/memory/Allocator.h"
#include "iro/io/Stream.h"
#include "iro/Scanner.h"

using namespace iro;

@lpp.import "sdata/SourceData.lh"

using namespace iro;

struct SourceDataFile;

/* ============================================================================
 *  Collection of options to alter parsing. 
 */
// struct SourceDataParserOptions
// {
//   // When enabled, referencing aux data by name is disallowed, eg. 
//   // 
//   //   some_data = {}
//   //   some_data2 = some_data
//   //   some_data3 = some_data : {}
//   //
//   // will result in error.
//   b8 disallow_aux_refs : 1;
// };

/* ----------------------------------------------------------------------------
 */
b8 parseSourceDataFile(SourceDataFile* file, io::RStream* io, String name);

/* ----------------------------------------------------------------------------
 */
SourceData* parsePossiblyTypedSourceData(
  SourceDataFile* file, 
  io::RStream* io, 
  String name);

/* ----------------------------------------------------------------------------
 */
SourceData* parsePossiblyTypedOrDerivedSourceData(
  SourceDataFile* file,
  io::RStream* io,
  String name);

/* ----------------------------------------------------------------------------
 *  Parses the possibly typed SourceData value from 'input' and appends it to 
 *  the given SourceDataFile's aux data list with the name 'aux_name'.
 */
SourceData* parsePossiblyTypedAuxData(
  SourceDataFile* file,
  io::RStream* input,
  String input_name,
  String aux_name);
